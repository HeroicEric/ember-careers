{
  "name": "ember-cli",
  "version": "0.0.16",
  "description": "Command line tool for developing ambitious ember.js apps",
  "bin": {
    "ember": "./bin/ember"
  },
  "scripts": {
    "test": "mocha --reporter spec tests/**/*-test.js tests/**/*-slow.js",
    "autotest": "mocha --watch --reporter spec tests/**/*-test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stefanpenner/ember-cli.git"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "keywords": [
    "ember.js",
    "ember",
    "cli",
    "app",
    "kit",
    "app-kit",
    "ember-app-kit"
  ],
  "author": {
    "name": "Ember core team and ember cli contributers"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stefanpenner/ember-cli/issues"
  },
  "dependencies": {
    "broccoli": "0.4.1",
    "bower": "~1.3.1",
    "lodash-node": "~2.4.1",
    "chalk": "~0.4.0",
    "rsvp": "~3.0.6",
    "nopt": "~2.1.2",
    "fs-extra": "~0.8.1",
    "ncp": "~0.5.0",
    "npm": "~1.4.4",
    "inquirer": "~0.4.1",
    "loom-generators-ember-appkit": "~1.0.5",
    "loom": "~3.1.2",
    "rimraf": "^2.2.6",
    "express": "^3.4.8",
    "broccoli-static-compiler": "^0.1.2",
    "broccoli-uglify-js": "^0.1.1",
    "broccoli-es6-concatenator": "^0.1.2",
    "connect-livereload": "^0.3.2",
    "tiny-lr": "0.0.5",
    "broccoli-env": "0.0.1"
  },
  "devDependencies": {
    "mocha": "~1.18.0",
    "mocha-jshint": "0.0.7"
  },
  "readme": "ember-cli [![Build Status](https://travis-ci.org/stefanpenner/ember-cli.png?branch=master)](https://travis-ci.org/stefanpenner/ember-cli)\n=========\n\na ember commandline utility.\n\n\nWarning\n=======\n\nAlthough potentially exciting, this is still really a WIP, use at your own risk.\n\n\nGetting Started\n===============\n\n```sh\nnpm install -g ember-cli\n\nmkdir my-cool-app\ncd my-cool-app\nember init\nember server\n```\n\nWhy?\n====\n\nThe https://github.com/stefanpenner/ember-app-kit project has proved to be quite useful, we have learned lots, and\nit allowed us to iterate quickly while building real ambitious applications.\n\nWhile it's initial incarnation is useful, it has several meta problems:\n\n1. It is not \"simple\" and appears daunting.\n2. Because of inline configuration, the api surface area is massive\n3. #2 does not allow users to express the \"what\" just the \"how\", this prevents EAK from doing more of the heavy lifting itself.\n4. [#2 #3] makes it quite tedious to upgrade\n\nRationale for #3\n===============\n\nIf we want to upgrade or swap in a faster build pipeline it would be a major pain currently. But with #3, in theory it should be minimal pain.\n\nGuidelines\n==========\n  - convention over configuration. (look to rails)\n    - we should provide internal configuration/implementation to satisfy the 'what' with the how.\n  - simple > easy\n  - the current contents of tasks/* should reside in the ember executables library\n  - the pipeline-related Broccoli configuration should also reside in the above mentioned library.\n\nUsage\n===========\n\nInstall from npm\n-------------------\n\n```sh\nnpm install ember-cli -g\n```\n\nCurrent Commands\n----------------\n\n```sh\nember build <env-name>\nember server\nember init [app-name] [--dry-run] [--skip-npm-install]\nember new [app-name]\n```\n\nDeveloping\n==========\n\nYou may want to use `npm link` to make your local source directory a globally installed package.\nSee [npm-developers](https://www.npmjs.org/doc/misc/npm-developers.html)\n\nRunning tests\n-------------\n\nOnce:\n```sh\nnpm test\n```\n\nOn every file change:\n```sh\nnpm run-script autotest\n```\n\nIdeas\n=====\n  - excutable  (this project)\n\n  ```sh\n  ember\n  ember init  <app-name>\n  ember build <env-name> [default: development] [optional: target path]\n  ember server\n    --autotest   [default: false]\n    --port       [default: 8000]\n    --subscribe  [default:release, optional: (beta|canary)]\n                   # on \"start\" of an app, it will prompt the user if the channel they\n                   # subscribe to has an update.\n                   # if an update occured. they are asked [yes, no] to try the update (using bower)\n                   #   (what about other libs? ember-data or components or..)\n    --env        [default: development] # allow previewing the various build envs.\n    --app        [default: .]\n\n  ember generate [...]\n  ember generate scaffold [...] # for resources\n\n  ember addon # reserved for future use.\n  ```\n  - folder structure: (very similar to what we currently have)\n\n  ```sh\n  app/*            # like EAK today\n  tasks/           # custom user tasks\n  vendor/          # mostly for bower, some non-bower stuff will reside.\n  tests/           # tests test config and test helpers.\n  tmp/*            # created on demand, but scratch pad for EAK.\n  Brocfile.js      # should contain a mechanism for default ember tasks to be loaded\n                   # should be the place for users to define custom broccoli related things.\n  package.json\n  bower.json\n  .gitignore\n  .travis\n  .jshintrc\n  ```\n\n  - configuration\n    ```shell\n    server.js                    # for adding additional connect middleware (like a proxy to the backend)\n    Brocfile                     # default tasks will exist in \"ember\"\n    tasks/                       # custom user tasks\n    ```\n  - detect .js, .coffee, .styl, .scss, .sass\n    and use the appropriate filter, or throw with useful error.\n    e.g:\n    ```javascript\nnew Error(\"tried compiling: `app.coffee` but CoffesScript is Missing, to install please: npm install coffee-script --save-dev\")\n     ````\n\n  - tasks\n    consider extracting them into broccoli-ember\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/stefanpenner/ember-cli",
  "_id": "ember-cli@0.0.16",
  "_from": "ember-cli@^0.0.16"
}
