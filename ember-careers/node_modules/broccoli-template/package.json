{
  "name": "broccoli-template",
  "description": "Generic template filter for Broccoli",
  "version": "0.1.0",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "main": "index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/joliss/broccoli-template"
  },
  "keywords": [
    "broccoli-plugin",
    "template",
    "javascript"
  ],
  "dependencies": {
    "js-string-escape": "^1.0.0",
    "broccoli-filter": "^0.1.0"
  },
  "readme": "# broccoli-template\n\nA generic filter for Broccoli that turns template files into ES6\nJavaScript modules. It wraps templates in a function call of your choice. Note\nthat no precompilation happens.\n\n## Installation\n\n```bash\nnpm install --save-dev broccoli-template\n```\n\n## Usage Example\n\n```js\nvar filterTemplates = require('broccoli-template');\ntree = filterTemplates(tree, {\n  extensions: ['hbs', 'handlebars'],\n  compileFunction: 'Ember.Handlebars.compile'\n});\n```\n\nGiven a file `template.hbs`\n\n```handlebars\n{{foo}}\n```\n\nthis function will emit a file `template.js`:\n\n```js\nexport default Ember.Handlebars.compile(\"{{foo}}\");\n```\n\n### Options\n\n#### extensions (required)\n\nA list of file extensions that this template filter applies to.\n\n#### compileFunction\n\nThe client-side compiler function to pass the template string into. If none is\nprovided, the JavaScript module will export the template string without any\ncompilation.\n\n## Caveats\n\n* Import statements are not yet supported. The `compileFunction` must be\n  globally available.\n\n* Module formats other than ES6 are not supported.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joliss/broccoli-template/issues"
  },
  "homepage": "https://github.com/joliss/broccoli-template",
  "_id": "broccoli-template@0.1.0",
  "_from": "broccoli-template@0.1.0"
}
