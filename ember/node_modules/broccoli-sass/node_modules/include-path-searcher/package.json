{
  "name": "include-path-searcher",
  "description": "Helper functions for searching for files in multiple include paths",
  "version": "0.1.0",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "main": "index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/joliss/include-path-searcher"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "^2.5.0"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "readme": "# include-path-searcher\n\n[![Build Status](https://travis-ci.org/joliss/include-path-searcher.png?branch=master)](https://travis-ci.org/joliss/include-path-searcher)\n\nUtility functions for searching multiple include paths.\n\n## Installation\n\n```bash\nnpm install --save include-path-searcher\n```\n\n## Usage\n\n```js\nvar includePathSearcher = require('include-path-searcher')\n```\n\n### findFileSync\n\n```js\nincludePathSearcher.findFileSync(relativePath, includePaths) // => fullPath\n```\n\nSearches for the file identified by `relativePath` in any of the given\ndirectories (`includePaths`). Returns the full path of the first file found,\nor throws an error if none found. For example:\n\n```js\nincludePathSearcher.findFileSync('foo.txt', ['dir1', 'dir2'])\n```\n\nThis returns either `'dir1/foo.txt'` or `'dir2/foo.txt'`. If `foo.txt` does\nnot exist in either directory, it throws an error.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/joliss/include-path-searcher/issues"
  },
  "homepage": "https://github.com/joliss/include-path-searcher",
  "_id": "include-path-searcher@0.1.0",
  "_from": "include-path-searcher@^0.1.0"
}
